##########################################################
# make temp data directory, created by gsianal job
# and removed by post jobsMRR Preliminary data setup step

########################################

date

export PS4=' $SECONDS + ' 

set -x

#######################################################

# The following variable could be defined in the 

# submission script (the ecf script), if 

# not they will take the default values which is set 

# for the NCO running enviroment

#######################################################

export RUN_ENVIR=${RUN_ENVIR:-nco}

export OMP_NUM_THREADS=1

######################

# Set NET and RUN

######################

export NET=rtma3d

#export RUN=rtma2p5, akrtma, hirtma, prrtma, gurtma, or rurtma2p5   #RUN MUST COME FROM HIGHER LEVEL SCRIPT! /MPondeca, 26Jul2015

# Note: grib_util module loaded in submission (lsf or ecFlow) script

##########################################################

# obtain unique process id (pid) and make temp directories

##########################################################

export jobid=${jobid:-"${outid}.o$$"}

export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}  #jobid ($job.$LSB_JOBID MUST BE DEFINED IN TERNS OF $RUN IN UPPER LEVEL SCRIPT /MPondeca, 26Jul2015

####################################

# File To Log Msgs

####################################

export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.$jobid}

####################################

# Determine Job Output Name on System

####################################

PDYm1=`$NDATE -24 ${PDY}${cyc} | cut -c 1-8`

export pgmout=${pgmout:-"OUTPUT.$$"}

export cycle=t${cyc}z 

export subcyc=${subcyc}  #Note: Must define subcyc in upper level script. Can be 00, 15, 30, or 45 /MPondeca, 30Jun2017

                         #only used for rurtma2p5


# Specify Execution Areas
export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}

export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}

export COMOUTpost_rtma3d=${COMOUTpost_rtma3d:-"${COMOUT}/postprd.${cycle}"}

export PROD_HEAD=${PROD_HEAD:-"${RUN}.t${cyc}z"}

export HOMErtma3d=${HOMErtma3d:-$NWROOT/rtma.${rtma_ver}}

export EXECrtma3d=${EXECrtma3d:-$HOMErtma/exec}

export FIXrtma3d=${FIXrtma3d:-$HOMErtma/fix/${RUN}}

export PARMrtma3d=${PARMrtma3d:-$HOMErtma/parm/${RUN}}

export USHrtma3d=${USHrtma3d:-$HOMErtma/ush/${RUN}}

export config_dir=${config_dir:-$PARMverf/config_files}

export urma_dir_ops=${urma_dir_ops:-$DATA_OBSPRD}

export urma_dir=${urma_dir:-$DATA_OBSPRD}

export RUNDIR_GSD=${RUNDIR_GSD:-${DATAROOT}/${RUN}_${PDY}${cyc}${subcyc}}

export stat_dir=${stat_dir:-$RUNDIR_GSD/verifprd}

export MASKS=${MASKS:-$PARMverf/masks}

export DATA_RHIST=${DATA_RHIST:-$DATAROOT/wrkdir_rhist.$PDY$cyc}

export hpss_save=${hpss_save:-${hpss_save}}

export write_to_rzdm=${write_to_rzdm:-${write_to_rzdm}}

export hpss_save_in_emc_fmt=${hpss_save_in_emc_fmt:-yes}

export hpss_save_in_runhistory_fmt=${hpss_save_in_runhistory_fmt:-yes}

export hpsspath0=${hpsspath0:-${hpsspath0}}

export tarfile_1=${tarfile_1:-com2_$NET_$envir_$RUN.$PDY}

export tarfile_2=${tarfile_2:-com2_$NET_$envir_$NET.$PDY}

export COMINobsproc_rtma3d=${COMINobsproc_rtma3d:-"${COMIN}/obsprd.${cycle}"}


###########################################

# Run setpdy and initialize PDY variables

###########################################

#setpdy.sh

#. ${DATA}/PDY

#################################################

# Set up the INPUT and OUTPUT directories

#################################################

export COMOUT=${COMOUT:-$COMROOT/${NET}/${envir}}/${RUN}.${PDY}

mkdir -p $COMOUT

export COMOUTpost_rtma3d=${COMOUTpost_rtma3d:-${COMOUT}/postprd.${cycle}}

###########################################################

#

# The following variables are used in exrtma3d_gsianl.sh

#

###########################################################

#   Set the path to the gsi executable

    export VERIF_ARCH=${EXECrtma3d:?}

########################################################
##########################################################

env

######################
# Execute the script.
######################
#
# Execute the script.
#
${exSCR_VERIF:-$HOMErtma3d/scripts/exrtma3d_transfer.sh}
#
 export err=$?; err_chk
#
 msg="$0 of $job completed normally"
#
 postmsg $jlogfile "$msg"
#
 if [ -e "${pgmout}" ] ; then
#
    cat $pgmout
#
       cp -p $pgmout   ${LOG_PGMOUT}
#
       fi
#

